initSidebarItems({"fn":[["add_listener_raw","Raw function for adding event listeners to JS’s event targets. This function is asynchronous and a future is returned."],["add_listener_with_async_cb_raw","Raw function for adding event listeners to JS’s event targets, using asynchronous event listeners. This function is asynchronous and a future is returned."],["add_listener_with_sync_cb_raw","Raw function for adding event listeners to JS’s event targets, using synchronous event listeners. However, this function is asynchronous and a future is returned."]],"struct":[["Blur","Safe wrapper for adding event listeners for events of type “blur”."],["Click","Safe wrapper for adding event listeners for events of type “click”."],["Drag","Safe wrapper for adding event listeners for events of type “drag”."],["DragDrop","Safe wrapper for adding event listeners for events of type “drop”."],["DragEnd","Safe wrapper for adding event listeners for events of type “dragend”."],["DragEnter","Safe wrapper for adding event listeners for events of type “dragenter”."],["DragLeave","Safe wrapper for adding event listeners for events of type “dragleave”."],["DragOver","Safe wrapper for adding event listeners for events of type “dragover”."],["DragStart","Safe wrapper for adding event listeners for events of type “dragstart”."],["Focus","Safe wrapper for adding event listeners for events of type “focus”."],["FocusIn","Safe wrapper for adding event listeners for events of type “focusin”."],["FocusOut","Safe wrapper for adding event listeners for events of type “focusout”."],["KeyDown","Safe wrapper for adding event listeners for events of type “keydown”."],["KeyUp","Safe wrapper for adding event listeners for events of type “keyup”."],["ListenNext","A single interval tick that can be awaited."],["Listener","A listener: listens to event occurences. Created by one of [`add_listener_raw`], [`add_listener_with_sync_cb_raw`], [`add_listener_with_async_cb_raw`], [`EventType::add_listener`], [`EventType::add"],["MouseDown","Safe wrapper for adding event listeners for events of type “mousedown”."],["MouseEnter","Safe wrapper for adding event listeners for events of type “mouseenter”."],["MouseLeave","Safe wrapper for adding event listeners for events of type “mouseleave”."],["MouseMove","Safe wrapper for adding event listeners for events of type “mousemove”."],["MouseOut","Safe wrapper for adding event listeners for events of type “mouseout”."],["MouseOver","Safe wrapper for adding event listeners for events of type “mouseover”."],["MouseUp","Safe wrapper for adding event listeners for events of type “mouseup”."],["TouchCancel","Safe wrapper for adding event listeners for events of type “touchcancel”."],["TouchEnd","Safe wrapper for adding event listeners for events of type “touchend”."],["TouchMove","Safe wrapper for adding event listeners for events of type “touchmove”."],["TouchStart","Safe wrapper for adding event listeners for events of type “touchstart”."]],"trait":[["EventType","Trait for safe wrappers over JS event types and JS event listening."]]});