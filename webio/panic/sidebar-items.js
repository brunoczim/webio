initSidebarItems({"fn":[["catch","Attempts to catch a panic from a given future. Note, however, that this is far from perfect, because if there are concurrent futures and any of them panicks, this function will catch their panic. Alternatively, one can think of `catch` as “catch any panic during the execution of the give future”."],["disable_hook_during_recovery",""],["hook_during_recovery_enabled",""]],"struct":[["DisableHookGuard","A guard of hook disabling. While this struct lives, produced by [`disable_hook_during_recovery`] function, and while there is a recovery in action, the previously used panic hook won’t be called. However, whenever this struct is dropped, it enables the previous hook again. Whether or not the hook is enabled, the recovery will happen."],["Panic","An instance of a panic. Currently, this holds no data, but there a plans for making it hold panic payload."],["Recovery",""]]});