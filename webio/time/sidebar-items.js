initSidebarItems({"fn":[["interval","Creates a handle that produces [`Future`]s that, when awaited, are always completed approximately with the same interval between them, they “tick”, given by a `duration`."],["timeout","Creates a [`Future`] that completes only after some duration of time has passed."]],"struct":[["Instant","A montonic clock measurement, mimicking [`std::time::Instant`] but for WASM, which is not supported by std’s `Instant`. Behind the curtains, this type uses JavaScript’s `performance::now()`, so there is an overhead when calling [`Instant::now`]."],["IntervalHandle","A handle to an [`interval`] call. An interval can be waited through `.tick().await`, or it can be cancelled when the handle is dropped without the interval completing."],["IntervalTick","A single interval tick that can be awaited."],["TimeoutHandle","A handle to a [`timeout`] call. The timeout can be waited through `.await`, or it can be cancelled when the handle is dropped without the timeout completing."]]});